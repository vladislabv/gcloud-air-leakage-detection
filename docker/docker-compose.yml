version: "3.7"
services:

  # zookeeper:
  #   restart: always
  #   image: docker.io/bitnami/zookeeper:3.8
  #   ports:
  #     - "2181:2181"
  #   volumes:
  #     - "zookeeper-volume:/bitnami"
  #   environment:
  #     - ALLOW_ANONYMOUS_LOGIN=yes
  #   networks:
  #     - pipeline-network
  
  # kafka:
  #   restart: always
  #   image: docker.io/bitnami/kafka:3.3
  #   ports:
  #     - "9093:9093"
  #   volumes:
  #     - "kafka-volume:/bitnami"
  #   environment:
  #     - KAFKA_BROKER_ID=1
  #     - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - ALLOW_PLAINTEXT_LISTENER=yes
  #     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
  #     - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
  #     - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
  #     - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
  #   networks:
  #     - pipeline-network
  #   depends_on:
  #     - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:6.1.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - pipeline-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    
  broker:
    image: confluentinc/cp-kafka:6.1.1
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    networks:
      - pipeline-network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  producer:
    image: python:3.10
    volumes:
      - "./job/producer:/app"
    command: >
      bash -c "pip install confluent-kafka
      && python /app/producer.py --file /app/druck_values.csv"
    networks:
      - pipeline-network
    depends_on:
      - broker

  jobmanager:
    image: pyflink:latest
    ports:
      - "8081:8081"
    command: jobmanager
    volumes:
      - "./job/artifacts:/flink/usrlib"
    networks:
      - flink-network
      - pipeline-network
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager        

  taskmanager:
    image: pyflink:latest
    depends_on:
      - jobmanager
    command: taskmanager
    networks:
      - flink-network
      - pipeline-network
    scale: 1
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 2

networks:
  flink-network:
    driver: bridge
  pipeline-network:
    driver: bridge

volumes:
  kafka-volume:
  zookeeper-volume:
